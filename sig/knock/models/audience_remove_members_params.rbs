module Knock
  module Models
    type audience_remove_members_params =
      { members: ::Array[Knock::Models::AudienceRemoveMembersParams::Member] }
      & Knock::request_parameters

    class AudienceRemoveMembersParams < Knock::BaseModel
      extend Knock::RequestParameters::Converter
      include Knock::RequestParameters

      attr_accessor members: ::Array[Knock::Models::AudienceRemoveMembersParams::Member]

      def initialize:
        (
          members: ::Array[Knock::Models::AudienceRemoveMembersParams::Member],
          request_options: Knock::request_opts
        ) -> void
        | (
          ?Knock::Models::audience_remove_members_params | Knock::BaseModel data
        ) -> void

      def to_hash: -> Knock::Models::audience_remove_members_params

      type member =
        { user: Knock::Models::InlineIdentifyUserRequest, tenant: String? }

      class Member < Knock::BaseModel
        attr_accessor user: Knock::Models::InlineIdentifyUserRequest

        attr_accessor tenant: String?

        def initialize:
          (
            user: Knock::Models::InlineIdentifyUserRequest,
            tenant: String?
          ) -> void
          | (
            ?Knock::Models::AudienceRemoveMembersParams::member
            | Knock::BaseModel data
          ) -> void

        def to_hash: -> Knock::Models::AudienceRemoveMembersParams::member
      end
    end
  end
end
