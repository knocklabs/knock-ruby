module Knock
  module Models
    type audience_member =
      {
        _typename: String,
        added_at: Time,
        user: Knock::Models::User,
        user_id: String,
        tenant: String?
      }

    class AudienceMember < Knock::BaseModel
      attr_accessor _typename: String

      attr_accessor added_at: Time

      attr_accessor user: Knock::Models::User

      attr_accessor user_id: String

      attr_accessor tenant: String?

      def initialize:
        (
          _typename: String,
          added_at: Time,
          user: Knock::Models::User,
          user_id: String,
          tenant: String?
        ) -> void
        | (?Knock::Models::audience_member | Knock::BaseModel data) -> void

      def to_hash: -> Knock::Models::audience_member
    end
  end
end
