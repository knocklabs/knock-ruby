module Knock
  module Models
    type user =
      {
        id: String,
        _typename: String,
        updated_at: Time,
        avatar: String?,
        created_at: Time?,
        email: String?,
        name: String?,
        phone_number: String?,
        timezone: String?
      }

    class User < Knock::BaseModel
      attr_accessor id: String

      attr_accessor _typename: String

      attr_accessor updated_at: Time

      attr_accessor avatar: String?

      attr_accessor created_at: Time?

      attr_accessor email: String?

      attr_accessor name: String?

      attr_accessor phone_number: String?

      attr_accessor timezone: String?

      def initialize:
        (
          id: String,
          _typename: String,
          updated_at: Time,
          avatar: String?,
          created_at: Time?,
          email: String?,
          name: String?,
          phone_number: String?,
          timezone: String?
        ) -> void
        | (?Knock::Models::user | Knock::BaseModel data) -> void

      def to_hash: -> Knock::Models::user
    end
  end
end
