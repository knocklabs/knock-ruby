module Knock
  module Models
    type object_list_schedules_params =
      {
        after: String,
        before: String,
        page_size: Integer,
        tenant: String,
        workflow: String
      }
      & Knock::request_parameters

    class ObjectListSchedulesParams < Knock::BaseModel
      extend Knock::RequestParameters::Converter
      include Knock::RequestParameters

      attr_reader after: String?

      def after=: (String) -> String

      attr_reader before: String?

      def before=: (String) -> String

      attr_reader page_size: Integer?

      def page_size=: (Integer) -> Integer

      attr_reader tenant: String?

      def tenant=: (String) -> String

      attr_reader workflow: String?

      def workflow=: (String) -> String

      def initialize:
        (
          after: String,
          before: String,
          page_size: Integer,
          tenant: String,
          workflow: String,
          request_options: Knock::request_opts
        ) -> void
        | (
          ?Knock::Models::object_list_schedules_params | Knock::BaseModel data
        ) -> void

      def to_hash: -> Knock::Models::object_list_schedules_params
    end
  end
end
