module Knock
  module Models
    module Objects
      type bulk_add_subscriptions_params =
        {
          subscriptions: ::Array[Knock::Models::Objects::BulkAddSubscriptionsParams::Subscription]
        }
        & Knock::request_parameters

      class BulkAddSubscriptionsParams < Knock::BaseModel
        extend Knock::RequestParameters::Converter
        include Knock::RequestParameters

        attr_accessor subscriptions: ::Array[Knock::Models::Objects::BulkAddSubscriptionsParams::Subscription]

        def initialize:
          (
            subscriptions: ::Array[Knock::Models::Objects::BulkAddSubscriptionsParams::Subscription],
            request_options: Knock::request_opts
          ) -> void
          | (
            ?Knock::Models::Objects::bulk_add_subscriptions_params
            | Knock::BaseModel data
          ) -> void

        def to_hash: -> Knock::Models::Objects::bulk_add_subscriptions_params

        type subscription =
          {
            id: String,
            recipients: ::Array[Knock::Models::recipient_request],
            properties: ::Hash[Symbol, top]?
          }

        class Subscription < Knock::BaseModel
          attr_accessor id: String

          attr_accessor recipients: ::Array[Knock::Models::recipient_request]

          attr_accessor properties: ::Hash[Symbol, top]?

          def initialize:
            (
              id: String,
              recipients: ::Array[Knock::Models::recipient_request],
              properties: ::Hash[Symbol, top]?
            ) -> void
            | (
              ?Knock::Models::Objects::BulkAddSubscriptionsParams::subscription
              | Knock::BaseModel data
            ) -> void

          def to_hash: -> Knock::Models::Objects::BulkAddSubscriptionsParams::subscription
        end
      end
    end
  end
end
