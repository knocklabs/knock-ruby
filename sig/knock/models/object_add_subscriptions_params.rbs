module Knock
  module Models
    type object_add_subscriptions_params =
      {
        collection: String,
        recipients: ::Array[Knock::Models::recipient_request],
        properties: ::Hash[Symbol, top]?
      }
      & Knock::request_parameters

    class ObjectAddSubscriptionsParams < Knock::BaseModel
      extend Knock::RequestParameters::Converter
      include Knock::RequestParameters

      attr_accessor collection: String

      attr_accessor recipients: ::Array[Knock::Models::recipient_request]

      attr_accessor properties: ::Hash[Symbol, top]?

      def initialize:
        (
          collection: String,
          recipients: ::Array[Knock::Models::recipient_request],
          properties: ::Hash[Symbol, top]?,
          request_options: Knock::request_opts
        ) -> void
        | (
          ?Knock::Models::object_add_subscriptions_params
          | Knock::BaseModel data
        ) -> void

      def to_hash: -> Knock::Models::object_add_subscriptions_params
    end
  end
end
