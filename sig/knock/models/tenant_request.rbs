module Knock
  module Models
    type tenant_request =
      {
        id: String,
        channel_data: Knock::Models::inline_channel_data_request?,
        preferences: Knock::Models::inline_preference_set_request?,
        settings: Knock::Models::TenantRequest::Settings
      }

    class TenantRequest < Knock::BaseModel
      attr_accessor id: String

      attr_accessor channel_data: Knock::Models::inline_channel_data_request?

      attr_accessor preferences: Knock::Models::inline_preference_set_request?

      attr_reader settings: Knock::Models::TenantRequest::Settings?

      def settings=: (
        Knock::Models::TenantRequest::Settings
      ) -> Knock::Models::TenantRequest::Settings

      def initialize:
        (
          id: String,
          channel_data: Knock::Models::inline_channel_data_request?,
          preferences: Knock::Models::inline_preference_set_request?,
          settings: Knock::Models::TenantRequest::Settings
        ) -> void
        | (?Knock::Models::tenant_request | Knock::BaseModel data) -> void

      def to_hash: -> Knock::Models::tenant_request

      type settings =
        {
          branding: Knock::Models::TenantRequest::Settings::Branding,
          preference_set: Knock::Models::PreferenceSetRequest?
        }

      class Settings < Knock::BaseModel
        attr_reader branding: Knock::Models::TenantRequest::Settings::Branding?

        def branding=: (
          Knock::Models::TenantRequest::Settings::Branding
        ) -> Knock::Models::TenantRequest::Settings::Branding

        attr_accessor preference_set: Knock::Models::PreferenceSetRequest?

        def initialize:
          (
            branding: Knock::Models::TenantRequest::Settings::Branding,
            preference_set: Knock::Models::PreferenceSetRequest?
          ) -> void
          | (
            ?Knock::Models::TenantRequest::settings | Knock::BaseModel data
          ) -> void

        def to_hash: -> Knock::Models::TenantRequest::settings

        type branding =
          {
            icon_url: String?,
            logo_url: String?,
            primary_color: String?,
            primary_color_contrast: String?
          }

        class Branding < Knock::BaseModel
          attr_accessor icon_url: String?

          attr_accessor logo_url: String?

          attr_accessor primary_color: String?

          attr_accessor primary_color_contrast: String?

          def initialize:
            (
              icon_url: String?,
              logo_url: String?,
              primary_color: String?,
              primary_color_contrast: String?
            ) -> void
            | (
              ?Knock::Models::TenantRequest::Settings::branding
              | Knock::BaseModel data
            ) -> void

          def to_hash: -> Knock::Models::TenantRequest::Settings::branding
        end
      end
    end
  end
end
