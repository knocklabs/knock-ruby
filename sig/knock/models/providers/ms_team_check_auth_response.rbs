module Knock
  module Models
    module Providers
      type ms_team_check_auth_response =
        {
          connection: Knock::Models::Providers::MsTeamCheckAuthResponse::Connection
        }

      class MsTeamCheckAuthResponse < Knock::BaseModel
        attr_accessor connection: Knock::Models::Providers::MsTeamCheckAuthResponse::Connection

        def initialize:
          (
            connection: Knock::Models::Providers::MsTeamCheckAuthResponse::Connection
          ) -> void
          | (
            ?Knock::Models::Providers::ms_team_check_auth_response
            | Knock::BaseModel data
          ) -> void

        def to_hash: -> Knock::Models::Providers::ms_team_check_auth_response

        type connection = { ok: bool, reason: String? }

        class Connection < Knock::BaseModel
          attr_accessor ok: bool

          attr_accessor reason: String?

          def initialize:
            (ok: bool, reason: String?) -> void
            | (
              ?Knock::Models::Providers::MsTeamCheckAuthResponse::connection
              | Knock::BaseModel data
            ) -> void

          def to_hash: -> Knock::Models::Providers::MsTeamCheckAuthResponse::connection
        end
      end
    end
  end
end
