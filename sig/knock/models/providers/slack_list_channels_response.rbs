module Knock
  module Models
    module Providers
      type slack_list_channels_response =
        {
          next_cursor: String?,
          slack_channels: ::Array[Knock::Models::Providers::SlackListChannelsResponse::SlackChannel]
        }

      class SlackListChannelsResponse < Knock::BaseModel
        attr_accessor next_cursor: String?

        attr_accessor slack_channels: ::Array[Knock::Models::Providers::SlackListChannelsResponse::SlackChannel]

        def initialize:
          (
            next_cursor: String?,
            slack_channels: ::Array[Knock::Models::Providers::SlackListChannelsResponse::SlackChannel]
          ) -> void
          | (
            ?Knock::Models::Providers::slack_list_channels_response
            | Knock::BaseModel data
          ) -> void

        def to_hash: -> Knock::Models::Providers::slack_list_channels_response

        type slack_channel =
          {
            id: String,
            context_team_id: String,
            is_im: bool,
            is_private: bool,
            name: String
          }

        class SlackChannel < Knock::BaseModel
          attr_accessor id: String

          attr_accessor context_team_id: String

          attr_accessor is_im: bool

          attr_accessor is_private: bool

          attr_accessor name: String

          def initialize:
            (
              id: String,
              context_team_id: String,
              is_im: bool,
              is_private: bool,
              name: String
            ) -> void
            | (
              ?Knock::Models::Providers::SlackListChannelsResponse::slack_channel
              | Knock::BaseModel data
            ) -> void

          def to_hash: -> Knock::Models::Providers::SlackListChannelsResponse::slack_channel
        end
      end
    end
  end
end
