module Knock
  module Resources
    class Workflows
      def cancel:
        (
          String key,
          Knock::Models::WorkflowCancelParams | ::Hash[Symbol, top] params
        ) -> String
        | (
          String key,
          cancellation_key: String,
          recipients: ::Array[String]?,
          tenant: String?,
          request_options: Knock::request_opts
        ) -> String

      def trigger:
        (
          String key,
          ?Knock::Models::WorkflowTriggerParams | ::Hash[Symbol, top] params
        ) -> Knock::Models::WorkflowTriggerResponse
        | (
          String key,
          actor: Knock::Models::recipient_request?,
          cancellation_key: String?,
          data: ::Hash[Symbol, top]?,
          recipients: ::Array[Knock::Models::recipient_request],
          tenant: Knock::Models::inline_tenant_request?,
          request_options: Knock::request_opts
        ) -> Knock::Models::WorkflowTriggerResponse

      def initialize: (client: Knock::Client) -> void
    end
  end
end
