module Knock
  class EntriesCursor[Elem]
    include Knock::BasePage[Elem]

    attr_accessor entries: ::Array[Elem]

    attr_accessor page_info: PageInfo

    def initialize: (
      client: Knock::BaseClient,
      req: Knock::BaseClient::request_components,
      headers: ::Hash[String, String],
      page_data: ::Hash[Symbol, top]
    ) -> void

    type page_info = { after: String }
    class PageInfo < Knock::BaseModel
      attr_reader after: String?

      def after=: (String) -> String

      def initialize:
        (after: String) -> void
        | (?page_info | Knock::BaseModel data) -> void

      def to_hash: -> page_info
    end
  end
end
