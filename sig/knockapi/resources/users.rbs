module Knockapi
  module Resources
    class Users
      attr_reader feeds: Knockapi::Resources::Users::Feeds

      attr_reader bulk: Knockapi::Resources::Users::Bulk

      def update:
        (
          String user_id,
          ?Knockapi::Models::UserUpdateParams | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::User
        | (
          String user_id,
          ?channel_data: Knockapi::Models::Recipients::inline_channel_data_request?,
          ?created_at: Time?,
          ?preferences: Knockapi::Models::Recipients::inline_preference_set_request?,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::User

      def list:
        (
          ?Knockapi::Models::UserListParams | ::Hash[Symbol, top] params
        ) -> Knockapi::EntriesCursor[Knockapi::Models::User]
        | (
          ?after: String,
          ?before: String,
          ?page_size: Integer,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::EntriesCursor[Knockapi::Models::User]

      def delete:
        (
          String user_id,
          ?Knockapi::Models::UserDeleteParams | ::Hash[Symbol, top] params
        ) -> String
        | (String user_id, ?request_options: Knockapi::request_opts) -> String

      def get:
        (
          String user_id,
          ?Knockapi::Models::UserGetParams | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::User
        | (
          String user_id,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::User

      def get_channel_data:
        (
          String user_id,
          String channel_id,
          ?Knockapi::Models::UserGetChannelDataParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::Recipients::RecipientsChannelData
        | (
          String user_id,
          String channel_id,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::Recipients::RecipientsChannelData

      def get_preferences:
        (
          String user_id,
          String preference_set_id,
          ?Knockapi::Models::UserGetPreferencesParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::Recipients::PreferenceSet
        | (
          String user_id,
          String preference_set_id,
          ?tenant: String,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::Recipients::PreferenceSet

      def list_messages:
        (
          String user_id,
          ?Knockapi::Models::UserListMessagesParams | ::Hash[Symbol, top] params
        ) -> Knockapi::EntriesCursor[Knockapi::Models::Message]
        | (
          String user_id,
          ?after: String,
          ?before: String,
          ?channel_id: String,
          ?engagement_status: ::Array[Knockapi::Models::UserListMessagesParams::engagement_status],
          ?message_ids: ::Array[String],
          ?page_size: Integer,
          ?source: String,
          ?status: ::Array[Knockapi::Models::UserListMessagesParams::status],
          ?tenant: String,
          ?trigger_data: String,
          ?workflow_categories: ::Array[String],
          ?workflow_recipient_run_id: String,
          ?workflow_run_id: String,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::EntriesCursor[Knockapi::Models::Message]

      def list_preferences:
        (
          String user_id,
          ?Knockapi::Models::UserListPreferencesParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::user_list_preferences_response
        | (
          String user_id,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::user_list_preferences_response

      def list_schedules:
        (
          String user_id,
          ?Knockapi::Models::UserListSchedulesParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::EntriesCursor[Knockapi::Models::Schedule]
        | (
          String user_id,
          ?after: String,
          ?before: String,
          ?page_size: Integer,
          ?tenant: String,
          ?workflow: String,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::EntriesCursor[Knockapi::Models::Schedule]

      def list_subscriptions:
        (
          String user_id,
          ?Knockapi::Models::UserListSubscriptionsParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::EntriesCursor[Knockapi::Models::Recipients::Subscription]
        | (
          String user_id,
          ?after: String,
          ?before: String,
          ?page_size: Integer,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::EntriesCursor[Knockapi::Models::Recipients::Subscription]

      def merge:
        (
          String user_id,
          Knockapi::Models::UserMergeParams | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::User
        | (
          String user_id,
          from_user_id: String,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::User

      def set_channel_data:
        (
          String user_id,
          String channel_id,
          Knockapi::Models::UserSetChannelDataParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::Recipients::RecipientsChannelData
        | (
          String user_id,
          String channel_id,
          data: Knockapi::Models::ChannelDataRequest::data,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::Recipients::RecipientsChannelData

      def set_preferences:
        (
          String user_id,
          String preference_set_id,
          ?Knockapi::Models::UserSetPreferencesParams
          | ::Hash[Symbol, top] params
        ) -> Knockapi::Models::Recipients::PreferenceSet
        | (
          String user_id,
          String preference_set_id,
          ?categories: ::Hash[Symbol, Knockapi::Models::PreferenceSetRequest::category]?,
          ?channel_types: Knockapi::Models::Recipients::PreferenceSetChannelTypes?,
          ?workflows: ::Hash[Symbol, Knockapi::Models::PreferenceSetRequest::workflow]?,
          ?request_options: Knockapi::request_opts
        ) -> Knockapi::Models::Recipients::PreferenceSet

      def unset_channel_data:
        (
          String user_id,
          String channel_id,
          ?Knockapi::Models::UserUnsetChannelDataParams
          | ::Hash[Symbol, top] params
        ) -> String
        | (
          String user_id,
          String channel_id,
          ?request_options: Knockapi::request_opts
        ) -> String

      def initialize: (client: Knockapi::Client) -> void
    end
  end
end
