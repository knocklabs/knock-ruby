module Knockapi
  module Internal
    module Transport
      class BaseClient
        type request_components =
          {
            method: Symbol,
            path: String | ::Array[String],
            query: ::Hash[String, (::Array[String] | String)?]?,
            headers: ::Hash[String, (String
            | Integer
            | ::Array[(String | Integer)?])?]?,
            body: top?,
            unwrap: Symbol?,
            page: Class?,
            stream: Class?,
            model: Knockapi::Internal::Type::Converter::input?,
            options: Knockapi::request_opts?
          }

        type request_input =
          {
            method: Symbol,
            url: URI::Generic,
            headers: ::Hash[String, String],
            body: top,
            max_retries: Integer,
            timeout: Float
          }

        MAX_REDIRECTS: 20

        PLATFORM_HEADERS: ::Hash[String, String]

        def self.validate!: (
          Knockapi::Internal::Transport::BaseClient::request_components req
        ) -> void

        def self.should_retry?: (
          Integer status,
          headers: ::Hash[String, String]
        ) -> bool

        def self.follow_redirect: (
          Knockapi::Internal::Transport::BaseClient::request_input request,
          status: Integer,
          response_headers: ::Hash[String, String]
        ) -> Knockapi::Internal::Transport::BaseClient::request_input

        def self.reap_connection!: (
          Integer | Knockapi::Errors::APIConnectionError status,
          stream: Enumerable[String]?
        ) -> void

        # @api private
        attr_accessor requester: Knockapi::Internal::Transport::PooledNetRequester

        def initialize: (
          base_url: String,
          ?timeout: Float,
          ?max_retries: Integer,
          ?initial_retry_delay: Float,
          ?max_retry_delay: Float,
          ?headers: ::Hash[String, (String
          | Integer
          | ::Array[(String | Integer)?])?],
          ?idempotency_header: String?
        ) -> void

        private def auth_headers: -> ::Hash[String, String]

        private def generate_idempotency_key: -> String

        private def build_request: (
          Knockapi::Internal::Transport::BaseClient::request_components req,
          Knockapi::request_options opts
        ) -> Knockapi::Internal::Transport::BaseClient::request_input

        private def retry_delay: (
          ::Hash[String, String] headers,
          retry_count: Integer
        ) -> Float

        private def send_request: (
          Knockapi::Internal::Transport::BaseClient::request_input request,
          redirect_count: Integer,
          retry_count: Integer,
          send_retry_header: bool
        ) -> [Integer, top, Enumerable[String]]

        def request: (
          Symbol method,
          String | ::Array[String] path,
          ?query: ::Hash[String, (::Array[String] | String)?]?,
          ?headers: ::Hash[String, (String
          | Integer
          | ::Array[(String | Integer)?])?]?,
          ?body: top?,
          ?unwrap: Symbol?,
          ?page: Class?,
          ?stream: Class?,
          ?model: Knockapi::Internal::Type::Converter::input?,
          ?options: Knockapi::request_opts?
        ) -> top

        def inspect: -> String
      end
    end
  end
end
