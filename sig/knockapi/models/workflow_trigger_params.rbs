module Knockapi
  module Models
    type workflow_trigger_params =
      {
        actor: Knockapi::Models::recipient_request?,
        cancellation_key: String?,
        data: ::Hash[Symbol, top]?,
        recipients: ::Array[Knockapi::Models::recipient_request],
        tenant: Knockapi::Models::inline_tenant_request?
      }
      & Knockapi::request_parameters

    class WorkflowTriggerParams < Knockapi::BaseModel
      extend Knockapi::RequestParameters::Converter
      include Knockapi::RequestParameters

      attr_accessor actor: Knockapi::Models::recipient_request?

      attr_accessor cancellation_key: String?

      attr_accessor data: ::Hash[Symbol, top]?

      attr_reader recipients: ::Array[Knockapi::Models::recipient_request]?

      def recipients=: (
        ::Array[Knockapi::Models::recipient_request]
      ) -> ::Array[Knockapi::Models::recipient_request]

      attr_accessor tenant: Knockapi::Models::inline_tenant_request?

      def initialize:
        (
          ?actor: Knockapi::Models::recipient_request?,
          ?cancellation_key: String?,
          ?data: ::Hash[Symbol, top]?,
          ?recipients: ::Array[Knockapi::Models::recipient_request],
          ?tenant: Knockapi::Models::inline_tenant_request?,
          ?request_options: Knockapi::request_opts
        ) -> void
        | (
          ?Knockapi::Models::workflow_trigger_params | Knockapi::BaseModel data
        ) -> void

      def to_hash: -> Knockapi::Models::workflow_trigger_params
    end
  end
end
