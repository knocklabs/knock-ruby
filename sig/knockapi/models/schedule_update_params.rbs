module Knockapi
  module Models
    type schedule_update_params =
      {
        schedule_ids: ::Array[String],
        actor: Knockapi::Models::ScheduleUpdateParams::actor?,
        data: ::Hash[Symbol, top]?,
        ending_at: Time?,
        repeats: ::Array[Knockapi::Models::ScheduleRepeatRule],
        scheduled_at: Time?,
        tenant: Knockapi::Models::inline_tenant_request?
      }
      & Knockapi::Internal::Type::request_parameters

    class ScheduleUpdateParams < Knockapi::Internal::Type::BaseModel
      extend Knockapi::Internal::Type::RequestParameters::Converter
      include Knockapi::Internal::Type::RequestParameters

      attr_accessor schedule_ids: ::Array[String]

      attr_accessor actor: Knockapi::Models::ScheduleUpdateParams::actor?

      attr_accessor data: ::Hash[Symbol, top]?

      attr_accessor ending_at: Time?

      attr_reader repeats: ::Array[Knockapi::Models::ScheduleRepeatRule]?

      def repeats=: (
        ::Array[Knockapi::Models::ScheduleRepeatRule]
      ) -> ::Array[Knockapi::Models::ScheduleRepeatRule]

      attr_accessor scheduled_at: Time?

      attr_accessor tenant: Knockapi::Models::inline_tenant_request?

      def initialize: (
        schedule_ids: ::Array[String],
        ?actor: Knockapi::Models::ScheduleUpdateParams::actor?,
        ?data: ::Hash[Symbol, top]?,
        ?ending_at: Time?,
        ?repeats: ::Array[Knockapi::Models::ScheduleRepeatRule],
        ?scheduled_at: Time?,
        ?tenant: Knockapi::Models::inline_tenant_request?,
        ?request_options: Knockapi::request_opts
      ) -> void

      def to_hash: -> Knockapi::Models::schedule_update_params

      type actor =
        String
        | Knockapi::Models::InlineIdentifyUserRequest
        | Knockapi::Models::InlineObjectRequest

      module Actor
        extend Knockapi::Internal::Type::Union

        def self?.variants: -> [String, Knockapi::Models::InlineIdentifyUserRequest, Knockapi::Models::InlineObjectRequest]
      end
    end
  end
end
