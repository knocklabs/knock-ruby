module Knockapi
  module Models
    type tenant_set_params =
      {
        channel_data: Knockapi::Models::Recipients::inline_channel_data_request?,
        preferences: Knockapi::Models::Recipients::inline_preference_set_request?,
        settings: Knockapi::Models::TenantSetParams::Settings
      }
      & Knockapi::Internal::Type::request_parameters

    class TenantSetParams < Knockapi::Internal::Type::BaseModel
      extend Knockapi::Internal::Type::RequestParameters::Converter
      include Knockapi::Internal::Type::RequestParameters

      attr_accessor channel_data: Knockapi::Models::Recipients::inline_channel_data_request?

      attr_accessor preferences: Knockapi::Models::Recipients::inline_preference_set_request?

      attr_reader settings: Knockapi::Models::TenantSetParams::Settings?

      def settings=: (
        Knockapi::Models::TenantSetParams::Settings
      ) -> Knockapi::Models::TenantSetParams::Settings

      def initialize: (
        ?channel_data: Knockapi::Models::Recipients::inline_channel_data_request?,
        ?preferences: Knockapi::Models::Recipients::inline_preference_set_request?,
        ?settings: Knockapi::Models::TenantSetParams::Settings,
        ?request_options: Knockapi::request_opts
      ) -> void

      def to_hash: -> Knockapi::Models::tenant_set_params

      type settings =
        {
          branding: Knockapi::Models::TenantSetParams::Settings::Branding,
          preference_set: Knockapi::Models::Recipients::PreferenceSetRequest?
        }

      class Settings < Knockapi::Internal::Type::BaseModel
        attr_reader branding: Knockapi::Models::TenantSetParams::Settings::Branding?

        def branding=: (
          Knockapi::Models::TenantSetParams::Settings::Branding
        ) -> Knockapi::Models::TenantSetParams::Settings::Branding

        attr_accessor preference_set: Knockapi::Models::Recipients::PreferenceSetRequest?

        def initialize: (
          ?branding: Knockapi::Models::TenantSetParams::Settings::Branding,
          ?preference_set: Knockapi::Models::Recipients::PreferenceSetRequest?
        ) -> void

        def to_hash: -> Knockapi::Models::TenantSetParams::settings

        type branding =
          {
            icon_url: String?,
            logo_url: String?,
            primary_color: String?,
            primary_color_contrast: String?
          }

        class Branding < Knockapi::Internal::Type::BaseModel
          attr_accessor icon_url: String?

          attr_accessor logo_url: String?

          attr_accessor primary_color: String?

          attr_accessor primary_color_contrast: String?

          def initialize: (
            ?icon_url: String?,
            ?logo_url: String?,
            ?primary_color: String?,
            ?primary_color_contrast: String?
          ) -> void

          def to_hash: -> Knockapi::Models::TenantSetParams::Settings::branding
        end
      end
    end
  end
end
