module Knockapi
  module Models
    type tenant =
      {
        id: String,
        _typename: String,
        name: String?,
        settings: Knockapi::Models::Tenant::Settings?
      }

    class Tenant < Knockapi::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor _typename: String

      attr_accessor name: String?

      attr_accessor settings: Knockapi::Models::Tenant::Settings?

      def initialize: (
        id: String,
        _typename: String,
        ?name: String?,
        ?settings: Knockapi::Models::Tenant::Settings?
      ) -> void

      def to_hash: -> Knockapi::Models::tenant

      type settings =
        {
          branding: Knockapi::Models::Tenant::Settings::Branding?,
          preference_set: Knockapi::Models::Recipients::PreferenceSet?
        }

      class Settings < Knockapi::Internal::Type::BaseModel
        attr_accessor branding: Knockapi::Models::Tenant::Settings::Branding?

        attr_accessor preference_set: Knockapi::Models::Recipients::PreferenceSet?

        def initialize: (
          ?branding: Knockapi::Models::Tenant::Settings::Branding?,
          ?preference_set: Knockapi::Models::Recipients::PreferenceSet?
        ) -> void

        def to_hash: -> Knockapi::Models::Tenant::settings

        type branding =
          {
            icon_url: String?,
            logo_url: String?,
            primary_color: String?,
            primary_color_contrast: String?
          }

        class Branding < Knockapi::Internal::Type::BaseModel
          attr_accessor icon_url: String?

          attr_accessor logo_url: String?

          attr_accessor primary_color: String?

          attr_accessor primary_color_contrast: String?

          def initialize: (
            ?icon_url: String?,
            ?logo_url: String?,
            ?primary_color: String?,
            ?primary_color_contrast: String?
          ) -> void

          def to_hash: -> Knockapi::Models::Tenant::Settings::branding
        end
      end
    end
  end
end
