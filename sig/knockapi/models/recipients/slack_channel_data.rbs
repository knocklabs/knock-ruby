module Knockapi
  module Models
    module Recipients
      type slack_channel_data =
        {
          connections: ::Array[Knockapi::Models::Recipients::SlackChannelData::connection],
          token: Knockapi::Models::Recipients::SlackChannelData::Token?
        }

      class SlackChannelData < Knockapi::BaseModel
        attr_accessor connections: ::Array[Knockapi::Models::Recipients::SlackChannelData::connection]

        attr_accessor token: Knockapi::Models::Recipients::SlackChannelData::Token?

        def initialize:
          (
            connections: ::Array[Knockapi::Models::Recipients::SlackChannelData::connection],
            token: Knockapi::Models::Recipients::SlackChannelData::Token?
          ) -> void
          | (
            ?Knockapi::Models::Recipients::slack_channel_data
            | Knockapi::BaseModel data
          ) -> void

        def to_hash: -> Knockapi::Models::Recipients::slack_channel_data

        type connection =
          Knockapi::Models::Recipients::SlackChannelData::Connection::SlackTokenConnection
          | Knockapi::Models::Recipients::SlackChannelData::Connection::SlackIncomingWebhookConnection

        class Connection < Knockapi::Union
          type slack_token_connection =
            { access_token: String?, channel_id: String?, user_id: String? }

          class SlackTokenConnection < Knockapi::BaseModel
            attr_accessor access_token: String?

            attr_accessor channel_id: String?

            attr_accessor user_id: String?

            def initialize:
              (
                access_token: String?,
                channel_id: String?,
                user_id: String?
              ) -> void
              | (
                ?Knockapi::Models::Recipients::SlackChannelData::Connection::slack_token_connection
                | Knockapi::BaseModel data
              ) -> void

            def to_hash: -> Knockapi::Models::Recipients::SlackChannelData::Connection::slack_token_connection
          end

          type slack_incoming_webhook_connection = { url: String }

          class SlackIncomingWebhookConnection < Knockapi::BaseModel
            attr_accessor url: String

            def initialize:
              (url: String) -> void
              | (
                ?Knockapi::Models::Recipients::SlackChannelData::Connection::slack_incoming_webhook_connection
                | Knockapi::BaseModel data
              ) -> void

            def to_hash: -> Knockapi::Models::Recipients::SlackChannelData::Connection::slack_incoming_webhook_connection
          end

          def self.variants: -> [Knockapi::Models::Recipients::SlackChannelData::Connection::SlackTokenConnection, Knockapi::Models::Recipients::SlackChannelData::Connection::SlackIncomingWebhookConnection]
        end

        type token = { access_token: String? }

        class Token < Knockapi::BaseModel
          attr_accessor access_token: String?

          def initialize:
            (access_token: String?) -> void
            | (
              ?Knockapi::Models::Recipients::SlackChannelData::token
              | Knockapi::BaseModel data
            ) -> void

          def to_hash: -> Knockapi::Models::Recipients::SlackChannelData::token
        end
      end
    end
  end
end
