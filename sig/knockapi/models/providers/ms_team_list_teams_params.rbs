module Knockapi
  module Models
    module Providers
      type ms_team_list_teams_params =
        {
          ms_teams_tenant_object: String,
          query_options: Knockapi::Providers::MsTeamListTeamsParams::QueryOptions
        }
        & Knockapi::Internal::Type::request_parameters

      class MsTeamListTeamsParams < Knockapi::Internal::Type::BaseModel
        extend Knockapi::Internal::Type::RequestParameters::Converter
        include Knockapi::Internal::Type::RequestParameters

        attr_accessor ms_teams_tenant_object: String

        attr_reader query_options: Knockapi::Providers::MsTeamListTeamsParams::QueryOptions?

        def query_options=: (
          Knockapi::Providers::MsTeamListTeamsParams::QueryOptions
        ) -> Knockapi::Providers::MsTeamListTeamsParams::QueryOptions

        def initialize: (
          ms_teams_tenant_object: String,
          ?query_options: Knockapi::Providers::MsTeamListTeamsParams::QueryOptions,
          ?request_options: Knockapi::request_opts
        ) -> void

        def to_hash: -> {
          ms_teams_tenant_object: String,
          query_options: Knockapi::Providers::MsTeamListTeamsParams::QueryOptions,
          request_options: Knockapi::RequestOptions
        }

        type query_options =
          { filter: String, select_: String, skiptoken: String, top: Integer }

        class QueryOptions < Knockapi::Internal::Type::BaseModel
          attr_reader filter: String?

          def filter=: (String) -> String

          attr_reader select_: String?

          def select_=: (String) -> String

          attr_reader skiptoken: String?

          def skiptoken=: (String) -> String

          attr_reader top: Integer?

          def top=: (Integer) -> Integer

          def initialize: (
            ?filter: String,
            ?select_: String,
            ?skiptoken: String,
            ?top: Integer
          ) -> void

          def to_hash: -> {
            filter: String,
            select_: String,
            skiptoken: String,
            top: Integer
          }
        end
      end
    end
  end
end
