module Knockapi
  module Models
    type message_get_content_response =
      {
        _typename: String,
        data: Knockapi::Models::MessageGetContentResponse::data,
        inserted_at: Time,
        message_id: String
      }

    class MessageGetContentResponse < Knockapi::Internal::Type::BaseModel
      attr_accessor _typename: String

      attr_accessor data: Knockapi::Models::MessageGetContentResponse::data

      attr_accessor inserted_at: Time

      attr_accessor message_id: String

      def initialize: (
        _typename: String,
        data: Knockapi::Models::MessageGetContentResponse::data,
        inserted_at: Time,
        message_id: String
      ) -> void

      def to_hash: -> Knockapi::Models::message_get_content_response

      type data =
        Knockapi::Models::MessageGetContentResponse::Data::MessageEmailContent
        | Knockapi::Models::MessageGetContentResponse::Data::MessageSMSContent
        | Knockapi::Models::MessageGetContentResponse::Data::MessagePushContent
        | Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent
        | Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent

      module Data
        extend Knockapi::Internal::Type::Union

        type message_email_content =
          {
            _typename: String,
            from: String,
            html_body: String,
            subject_line: String,
            text_body: String,
            to: String,
            bcc: String?,
            cc: String?,
            reply_to: String?
          }

        class MessageEmailContent < Knockapi::Internal::Type::BaseModel
          attr_accessor _typename: String

          attr_accessor from: String

          attr_accessor html_body: String

          attr_accessor subject_line: String

          attr_accessor text_body: String

          attr_accessor to: String

          attr_accessor bcc: String?

          attr_accessor cc: String?

          attr_accessor reply_to: String?

          def initialize: (
            _typename: String,
            from: String,
            html_body: String,
            subject_line: String,
            text_body: String,
            to: String,
            ?bcc: String?,
            ?cc: String?,
            ?reply_to: String?
          ) -> void

          def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::message_email_content
        end

        type message_sms_content =
          { _typename: String, body: String, to: String }

        class MessageSMSContent < Knockapi::Internal::Type::BaseModel
          attr_accessor _typename: String

          attr_accessor body: String

          attr_accessor to: String

          def initialize: (_typename: String, body: String, to: String) -> void

          def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::message_sms_content
        end

        type message_push_content =
          {
            token: String,
            _typename: String,
            body: String,
            title: String,
            data: top?
          }

        class MessagePushContent < Knockapi::Internal::Type::BaseModel
          attr_accessor token: String

          attr_accessor _typename: String

          attr_accessor body: String

          attr_accessor title: String

          attr_accessor data: top?

          def initialize: (
            token: String,
            _typename: String,
            body: String,
            title: String,
            ?data: top?
          ) -> void

          def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::message_push_content
        end

        type message_chat_content =
          {
            _typename: String,
            connection: top,
            template: Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template,
            metadata: top?
          }

        class MessageChatContent < Knockapi::Internal::Type::BaseModel
          attr_accessor _typename: String

          attr_accessor connection: top

          attr_accessor template: Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template

          attr_accessor metadata: top?

          def initialize: (
            _typename: String,
            connection: top,
            template: Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template,
            ?metadata: top?
          ) -> void

          def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::message_chat_content

          type template =
            {
              blocks: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block]?,
              json_content: top?,
              summary: String?
            }

          class Template < Knockapi::Internal::Type::BaseModel
            attr_accessor blocks: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block]?

            attr_accessor json_content: top?

            attr_accessor summary: String?

            def initialize: (
              ?blocks: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block]?,
              ?json_content: top?,
              ?summary: String?
            ) -> void

            def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::template

            type block =
              {
                content: String,
                name: String,
                type: Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block::type_
              }

            class Block < Knockapi::Internal::Type::BaseModel
              attr_accessor content: String

              attr_accessor name: String

              attr_accessor type: Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block::type_

              def initialize: (
                content: String,
                name: String,
                type: Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block::type_
              ) -> void

              def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::block

              type type_ = :text | :markdown

              module Type
                extend Knockapi::Internal::Type::Enum

                TEXT: :text
                MARKDOWN: :markdown

                def self?.values: -> ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent::Template::Block::type_]
              end
            end
          end
        end

        type message_in_app_feed_content =
          {
            _typename: String,
            blocks: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::block]
          }

        class MessageInAppFeedContent < Knockapi::Internal::Type::BaseModel
          attr_accessor _typename: String

          attr_accessor blocks: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::block]

          def initialize: (
            _typename: String,
            blocks: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::block]
          ) -> void

          def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::message_in_app_feed_content

          type block =
            Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ContentBlock
            | Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock

          module Block
            extend Knockapi::Internal::Type::Union

            type content_block =
              {
                content: String,
                name: String,
                rendered: String,
                type: Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ContentBlock::type_
              }

            class ContentBlock < Knockapi::Internal::Type::BaseModel
              attr_accessor content: String

              attr_accessor name: String

              attr_accessor rendered: String

              attr_accessor type: Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ContentBlock::type_

              def initialize: (
                content: String,
                name: String,
                rendered: String,
                type: Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ContentBlock::type_
              ) -> void

              def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::content_block

              type type_ = :markdown | :text

              module Type
                extend Knockapi::Internal::Type::Enum

                MARKDOWN: :markdown
                TEXT: :text

                def self?.values: -> ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ContentBlock::type_]
              end
            end

            type button_set_block =
              {
                buttons: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::Button],
                name: String,
                type: Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::type_
              }

            class ButtonSetBlock < Knockapi::Internal::Type::BaseModel
              attr_accessor buttons: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::Button]

              attr_accessor name: String

              attr_accessor type: Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::type_

              def initialize: (
                buttons: ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::Button],
                name: String,
                type: Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::type_
              ) -> void

              def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::button_set_block

              type button = { action: String, label: String, name: String }

              class Button < Knockapi::Internal::Type::BaseModel
                attr_accessor action: String

                attr_accessor label: String

                attr_accessor name: String

                def initialize: (
                  action: String,
                  label: String,
                  name: String
                ) -> void

                def to_hash: -> Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::button
              end

              type type_ = :button_set

              module Type
                extend Knockapi::Internal::Type::Enum

                BUTTON_SET: :button_set

                def self?.values: -> ::Array[Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock::type_]
              end
            end

            def self?.variants: -> [Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ContentBlock, Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent::Block::ButtonSetBlock]
          end
        end

        def self?.variants: -> [Knockapi::Models::MessageGetContentResponse::Data::MessageEmailContent, Knockapi::Models::MessageGetContentResponse::Data::MessageSMSContent, Knockapi::Models::MessageGetContentResponse::Data::MessagePushContent, Knockapi::Models::MessageGetContentResponse::Data::MessageChatContent, Knockapi::Models::MessageGetContentResponse::Data::MessageInAppFeedContent]
      end
    end
  end
end
