module Knockapi
  module Models
    module Channels
      type bulk_update_message_status_params =
        {
          archived: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::archived,
          delivery_status: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::delivery_status,
          engagement_status: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::engagement_status,
          has_tenant: bool,
          newer_than: Time,
          older_than: Time,
          recipient_ids: ::Array[String],
          tenants: ::Array[String],
          trigger_data: String,
          workflows: ::Array[String]
        }
        & Knockapi::Internal::Type::request_parameters

      class BulkUpdateMessageStatusParams < Knockapi::Internal::Type::BaseModel
        extend Knockapi::Internal::Type::RequestParameters::Converter
        include Knockapi::Internal::Type::RequestParameters

        attr_reader archived: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::archived?

        def archived=: (
          Knockapi::Models::Channels::BulkUpdateMessageStatusParams::archived
        ) -> Knockapi::Models::Channels::BulkUpdateMessageStatusParams::archived

        attr_reader delivery_status: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::delivery_status?

        def delivery_status=: (
          Knockapi::Models::Channels::BulkUpdateMessageStatusParams::delivery_status
        ) -> Knockapi::Models::Channels::BulkUpdateMessageStatusParams::delivery_status

        attr_reader engagement_status: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::engagement_status?

        def engagement_status=: (
          Knockapi::Models::Channels::BulkUpdateMessageStatusParams::engagement_status
        ) -> Knockapi::Models::Channels::BulkUpdateMessageStatusParams::engagement_status

        attr_reader has_tenant: bool?

        def has_tenant=: (bool) -> bool

        attr_reader newer_than: Time?

        def newer_than=: (Time) -> Time

        attr_reader older_than: Time?

        def older_than=: (Time) -> Time

        attr_reader recipient_ids: ::Array[String]?

        def recipient_ids=: (::Array[String]) -> ::Array[String]

        attr_reader tenants: ::Array[String]?

        def tenants=: (::Array[String]) -> ::Array[String]

        attr_reader trigger_data: String?

        def trigger_data=: (String) -> String

        attr_reader workflows: ::Array[String]?

        def workflows=: (::Array[String]) -> ::Array[String]

        def initialize: (
          ?archived: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::archived,
          ?delivery_status: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::delivery_status,
          ?engagement_status: Knockapi::Models::Channels::BulkUpdateMessageStatusParams::engagement_status,
          ?has_tenant: bool,
          ?newer_than: Time,
          ?older_than: Time,
          ?recipient_ids: ::Array[String],
          ?tenants: ::Array[String],
          ?trigger_data: String,
          ?workflows: ::Array[String],
          ?request_options: Knockapi::request_opts
        ) -> void

        def to_hash: -> Knockapi::Models::Channels::bulk_update_message_status_params

        type action =
          :seen
          | :unseen
          | :read
          | :unread
          | :archived
          | :unarchived
          | :interacted
          | :archive
          | :unarchive
          | :delete

        module Action
          extend Knockapi::Internal::Type::Enum

          SEEN: :seen
          UNSEEN: :unseen
          READ: :read
          UNREAD: :unread
          ARCHIVED: :archived
          UNARCHIVED: :unarchived
          INTERACTED: :interacted
          ARCHIVE: :archive
          UNARCHIVE: :unarchive
          DELETE: :delete

          def self?.values: -> ::Array[Knockapi::Models::Channels::BulkUpdateMessageStatusParams::action]
        end

        type archived = :exclude | :include | :only

        module Archived
          extend Knockapi::Internal::Type::Enum

          EXCLUDE: :exclude
          INCLUDE: :include
          ONLY: :only

          def self?.values: -> ::Array[Knockapi::Models::Channels::BulkUpdateMessageStatusParams::archived]
        end

        type delivery_status =
          :queued
          | :sent
          | :delivered
          | :delivery_attempted
          | :undelivered
          | :not_sent
          | :bounced

        module DeliveryStatus
          extend Knockapi::Internal::Type::Enum

          QUEUED: :queued
          SENT: :sent
          DELIVERED: :delivered
          DELIVERY_ATTEMPTED: :delivery_attempted
          UNDELIVERED: :undelivered
          NOT_SENT: :not_sent
          BOUNCED: :bounced

          def self?.values: -> ::Array[Knockapi::Models::Channels::BulkUpdateMessageStatusParams::delivery_status]
        end

        type engagement_status =
          :seen
          | :unseen
          | :read
          | :unread
          | :archived
          | :unarchived
          | :link_clicked
          | :interacted

        module EngagementStatus
          extend Knockapi::Internal::Type::Enum

          SEEN: :seen
          UNSEEN: :unseen
          READ: :read
          UNREAD: :unread
          ARCHIVED: :archived
          UNARCHIVED: :unarchived
          LINK_CLICKED: :link_clicked
          INTERACTED: :interacted

          def self?.values: -> ::Array[Knockapi::Models::Channels::BulkUpdateMessageStatusParams::engagement_status]
        end
      end
    end
  end
end
