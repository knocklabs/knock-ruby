module Knockapi
  module Models
    module Users
      type feed_list_items_params =
        {
          after: String,
          archived: Knockapi::Models::Users::FeedListItemsParams::archived,
          before: String,
          has_tenant: bool,
          page_size: Integer,
          source: String,
          status: Knockapi::Models::Users::FeedListItemsParams::status,
          tenant: String,
          trigger_data: String,
          workflow_categories: ::Array[String]
        }
        & Knockapi::request_parameters

      class FeedListItemsParams < Knockapi::BaseModel
        extend Knockapi::Type::RequestParameters::Converter
        include Knockapi::RequestParameters

        attr_reader after: String?

        def after=: (String) -> String

        attr_reader archived: Knockapi::Models::Users::FeedListItemsParams::archived?

        def archived=: (
          Knockapi::Models::Users::FeedListItemsParams::archived
        ) -> Knockapi::Models::Users::FeedListItemsParams::archived

        attr_reader before: String?

        def before=: (String) -> String

        attr_reader has_tenant: bool?

        def has_tenant=: (bool) -> bool

        attr_reader page_size: Integer?

        def page_size=: (Integer) -> Integer

        attr_reader source: String?

        def source=: (String) -> String

        attr_reader status: Knockapi::Models::Users::FeedListItemsParams::status?

        def status=: (
          Knockapi::Models::Users::FeedListItemsParams::status
        ) -> Knockapi::Models::Users::FeedListItemsParams::status

        attr_reader tenant: String?

        def tenant=: (String) -> String

        attr_reader trigger_data: String?

        def trigger_data=: (String) -> String

        attr_reader workflow_categories: ::Array[String]?

        def workflow_categories=: (::Array[String]) -> ::Array[String]

        def initialize: (
          ?after: String,
          ?archived: Knockapi::Models::Users::FeedListItemsParams::archived,
          ?before: String,
          ?has_tenant: bool,
          ?page_size: Integer,
          ?source: String,
          ?status: Knockapi::Models::Users::FeedListItemsParams::status,
          ?tenant: String,
          ?trigger_data: String,
          ?workflow_categories: ::Array[String],
          ?request_options: Knockapi::request_opts
        ) -> void

        def to_hash: -> Knockapi::Models::Users::feed_list_items_params

        type archived = :exclude | :include | :only

        module Archived
          extend Knockapi::Enum

          EXCLUDE: :exclude
          INCLUDE: :include
          ONLY: :only

          def self?.values: -> ::Array[Knockapi::Models::Users::FeedListItemsParams::archived]
        end

        type status = :unread | :read | :unseen | :seen | :all

        module Status
          extend Knockapi::Enum

          UNREAD: :unread
          READ: :read
          UNSEEN: :unseen
          SEEN: :seen
          ALL: :all

          def self?.values: -> ::Array[Knockapi::Models::Users::FeedListItemsParams::status]
        end
      end
    end
  end
end
